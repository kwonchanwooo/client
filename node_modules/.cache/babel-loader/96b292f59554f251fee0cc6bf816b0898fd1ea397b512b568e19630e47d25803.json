{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/the node/node+react/client/src/community/List.jsx\",\n  _s = $RefreshSig$();\nimport Layout from '../common/Layout';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Item = styled.article`\n\twidth: 100%;\n\tpadding: 30px 40px;\n\tbackground: #ba3535;\n\tmargin-bottom: 50px;\n\tbox-shadow: 10px 10px 20px rgba(0, 0, 0, 0.02);\n`;\n_c = Item;\nfunction List() {\n  _s();\n  const [List, setList] = useState([]);\n  useEffect(() => {\n    axios.get('/api/community/read/0').then(res => {\n      if (res.data.success) {\n        setList(res.data.communityList);\n        //요청은 성공해서 응답은 받았으나 DB로 데이터 가져오는것을 실패했을때\n      } else {\n        console.log('데이터 요청에 실패했습니다.');\n      }\n    })\n    //요청 자체가 실패했을떄\n    .catch(err => console.log(err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    name: '목록',\n    children: List.map(post => {\n      return /*#__PURE__*/_jsxDEV(Item, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/detail/${post.communityNum}`,\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\uC791\\uC131\\uC790: \", post.writer.displayName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 7\n        }, this)]\n      }, post._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 6\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }, this);\n}\n_s(List, \"pp6+SDSxD4cGk2HNsTyFf+1twVY=\");\n_c2 = List;\nexport default List;\nvar _c, _c2;\n$RefreshReg$(_c, \"Item\");\n$RefreshReg$(_c2, \"List\");","map":{"version":3,"names":["Layout","axios","useEffect","useState","Link","styled","jsxDEV","_jsxDEV","Item","article","_c","List","_s","setList","get","then","res","data","success","communityList","console","log","catch","err","name","children","map","post","to","communityNum","title","fileName","_jsxFileName","lineNumber","columnNumber","writer","displayName","_id","_c2","$RefreshReg$"],"sources":["/Users/home/Desktop/the node/node+react/client/src/community/List.jsx"],"sourcesContent":["import Layout from '../common/Layout';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Item = styled.article`\n\twidth: 100%;\n\tpadding: 30px 40px;\n\tbackground: #ba3535;\n\tmargin-bottom: 50px;\n\tbox-shadow: 10px 10px 20px rgba(0, 0, 0, 0.02);\n`;\n\nfunction List() {\n\tconst [List, setList] = useState([]);\n\n\tuseEffect(() => {\n\t\taxios\n\t\t\t.get('/api/community/read/0')\n\t\t\t.then((res) => {\n\t\t\t\tif (res.data.success) {\n\t\t\t\t\tsetList(res.data.communityList);\n\t\t\t\t\t//요청은 성공해서 응답은 받았으나 DB로 데이터 가져오는것을 실패했을때\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log('데이터 요청에 실패했습니다.');\n\t\t\t\t}\n\t\t\t})\n\t\t\t//요청 자체가 실패했을떄\n\t\t\t.catch((err) => console.log(err));\n\t}, []);\n\n\treturn (\n\t\t<Layout name={'목록'}>\n\t\t\t{List.map((post) => {\n\t\t\t\treturn (\n\t\t\t\t\t<Item key={post._id}>\n\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t<Link to={`/detail/${post.communityNum}`}>{post.title}</Link>\n\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t<span>작성자: {post.writer.displayName}</span>\n\t\t\t\t\t</Item>\n\t\t\t\t);\n\t\t\t})}\n\t\t</Layout>\n\t);\n}\n\nexport default List;\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,kBAAkB;AACrC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,IAAI,GAAGH,MAAM,CAACI,OAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GANIF,IAAI;AAQV,SAASG,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACD,IAAI,EAAEE,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACfD,KAAK,CACHa,GAAG,CAAC,uBAAuB,CAAC,CAC5BC,IAAI,CAAEC,GAAG,IAAK;MACd,IAAIA,GAAG,CAACC,IAAI,CAACC,OAAO,EAAE;QACrBL,OAAO,CAACG,GAAG,CAACC,IAAI,CAACE,aAAa,CAAC;QAC/B;MACD,CAAC,MAAM;QACNC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;MAC/B;IACD,CAAC;IACD;IAAA,CACCC,KAAK,CAAEC,GAAG,IAAKH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC,CAAC;EACnC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACChB,OAAA,CAACP,MAAM;IAACwB,IAAI,EAAE,IAAK;IAAAC,QAAA,EACjBd,IAAI,CAACe,GAAG,CAAEC,IAAI,IAAK;MACnB,oBACCpB,OAAA,CAACC,IAAI;QAAAiB,QAAA,gBACJlB,OAAA;UAAAkB,QAAA,eACClB,OAAA,CAACH,IAAI;YAACwB,EAAE,EAAG,WAAUD,IAAI,CAACE,YAAa,EAAE;YAAAJ,QAAA,EAAEE,IAAI,CAACG;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAQ;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACzD,eACL3B,OAAA;UAAAkB,QAAA,GAAM,sBAAK,EAACE,IAAI,CAACQ,MAAM,CAACC,WAAW;QAAA;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAQ;MAAA,GAJjCP,IAAI,CAACU,GAAG;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAKZ;IAET,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACM;AAEX;AAACtB,EAAA,CAhCQD,IAAI;AAAA2B,GAAA,GAAJ3B,IAAI;AAkCb,eAAeA,IAAI;AAAC,IAAAD,EAAA,EAAA4B,GAAA;AAAAC,YAAA,CAAA7B,EAAA;AAAA6B,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}